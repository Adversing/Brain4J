package org.brain4j.math.weightsinit;

import java.util.Random;

/**
 * Strategies for initializing neural network weights.
 * Each weight is initialized randomly within bounds determined by the
 * chosen initialization technique and the number of input and output neurons
 */
public interface WeightInitialization {
    /**
     * Gets the maximum bound of each weight when initialized.
     * @param input The amount of input neurons.
     * @param output The amount of output neurons.
     * @return The maximum/minimum bound.
     */
    double getBound(int input, int output);

    /**
     * Gets a random value within bounds determined by the initialization technique.
     * @param generator The random number generator.
     * @param input The amount of input neurons.
     * @param output The amount of output neurons.
     * @return A random value generated by the initialization technique.
     */
    double generate(Random generator, int input, int output);

    /**
     * Gets a random value within the specified bounds.
     * @param generator The random number generator.
     * @param min The minimum bound.
     * @param max The maximum bound.
     * @return A random value within the specified bounds.
     */
    default double randomBetween(Random generator, double min, double max) {
        return generator.nextDouble() * (max - min) + min;
    }
}
